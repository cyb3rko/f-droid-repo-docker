name: Continuous Builder
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 6"

# Defines two custom environment variables for the workflow.
# These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/f-droid-repo

jobs:
  build:
    name: Continuous Builder
    runs-on: ubuntu-latest

    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Uses the `docker/login-action` action to log in to the container registry.
      # Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # This step uses 'docker/metadata-action' to extract tags and labels that can be applied to the specified image.
      # The 'id' "meta" allows the output of this step to be referenced in a subsequent step.
      # The `images` value provides the base name for the tags and labels.
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Fetch newest tag
        run: echo "TAG=$(curl -s "https://gitlab.com/api/v4/projects/36527/repository/tags?per_page=1" | sed -E 's/.*"name":"([0-9.a-z]+)".*/\1/')" >> $GITHUB_OUTPUT

      # This step uses the `docker/build-push-action` action to build the image, based on your repository's Dockerfile.
      # It uses the `context` parameter to define the build's context as the set of files located in the specified path.
      # It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: List images
        run: docker images

      - name: Check for new fdroidserver tag
        id: check
        run: bash ./.github/check_tag.sh

      - name: Push image
        if: ${{ steps.check.outputs.update == 'true' }}
        run: docker push --all-tags ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Update tag
        if: ${{ steps.check.outputs.update == 'true' }}
        run: echo $TAG > .tag

      - name: Commit updated tag
        if: ${{ steps.check.outputs.update == 'true' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Release version '${{ env.TAG }}'
